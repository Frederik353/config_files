
# Mod1 = alt
set $mod Mod1

set $lock ~/.local/bin/scripts/lock.sh
set $power ~/.config/wofi/power
set $wifi ~/.config/wofi/nmcli
set $term termite

set $menu wofi --dmenu --prompt "Select Workspace" --lines $(expr $(swaymsg -t get_tree | jq '.nodes | map([recurse(.nodes[]?, .floating_nodes[]?) | .focused] | any) | index(true)') - 1) --run-command 'swaymsg exec -- {cmd}'
set $menu wofi --dmenu --prompt "Select Output" --lines $(swaymsg -t get_outputs | jq 'map(select(.active) | .focused) | index(true)') --run-command 'swaymsg exec -- {cmd}'

set $screenshot grim ~/Images/screenshots/scrn-$(date +"%Y-%m-%d-%H-%M-%S").png
set $screenclip slurp | grim -g - ~/Images/screenshots/scrn-$(date +"%Y-%m-%d-%H-%M-%S").png
set $background ~/.wallpapers/kali1.jpg

set $cl_high #009ddc
set $cl_indi #d9d8d8
set $cl_back #231f20
set $cl_fore #d9d8d8
set $cl_urge #ee2e24

# Colors                border   bg       text     indi     childborder
client.focused          $cl_high $cl_high $cl_fore $cl_indi $cl_high
client.focused_inactive $cl_back $cl_back $cl_fore $cl_back $cl_back
client.unfocused        $cl_back $cl_back $cl_fore $cl_back $cl_back
client.urgent           $cl_urge $cl_urge $cl_fore $cl_urge $cl_urge


font pango:Hack Nerd Font 1
default_border none
default_floating_border none
# for_window [class=".*"] border none
# hide_edge_borders smart
hide_edge_borders --i3 smart
smart_gaps on
gaps inner 5
gaps outer 0




input * {
    xkb_layout no
    xkb_options ctrl:nocaps
    xkb_variant nodeadkeys
}

# Output configuration
output * bg $background fill

# Default workspaces for common programs
assign [class="^Alacritty$"] $ws1
assign [class="^Google-Chrome$"] $ws2
# assign [class="^Signal$"] $wsF1
# assign [class="^Mailspring$"] $wsF2



bindsym $mod+q exec alacritty
bindsym $mod+n exec google-chrome-stable
bindsym $mod+c kill
bindsym $mod+e exec dolphin
# bindsym $mod+v floating toggle
bindsym $mod+Shift+c reload
bindsym $mod+b splith
bindsym $mod+v splitv

# Mod4 = win key
bindsym Mod4 exec wofi -show drun

bindsym $mod+l exec $lock
bindsym $mod+Escape exec $power
bindsym $mod+End exec $wifi


# Multimedia
# bindsym --locked XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') +5%
# bindsym --locked XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') -5%
# bindsym --locked XF86AudioMute exec --no-startup-id pactl set-sink-mute $(pacmd list-sinks |awk '/* index:/{print $3}') toggle
# bindsym --locked XF86AudioPlay exec playerctl play-pause
# bindsym --locked XF86AudioNext exec playerctl next
# bindsym --locked XF86AudioPrev exec playerctl previous
#
# # Brightness controls
# bindsym --locked XF86MonBrightnessUp exec --no-startup-id light -A 10
# bindsym --locked XF86MonBrightnessDown exec --no-startup-id light -U 10
#
# # Toggle Redshift
# bindsym $mod+Home exec --no-startup-id pkill -USR1 redshift
#
# # Idle configuration
exec swayidle \
    timeout 300 'exec $lock' \
    timeout 600 'swaymsg "output * dpms off"' \
    after-resume 'swaymsg "output * dpms on"' \
    before-sleep 'exec $lock'

# # Move your focus around
# bindsym $mod+Left focus left
# bindsym $mod+Down focus down
# bindsym $mod+Up focus up
# bindsym $mod+Right focus right
#
# # _move_ the focused window with the same, but add Shift
# bindsym $mod+Shift+Left move left
# bindsym $mod+Shift+Down move down
# bindsym $mod+Shift+Up move up
# bindsym $mod+Shift+Right move right


# Load the script path
set $switch_super ~/.config/sway/switch_superspace.sh

bindsym $mod+ctrl+1 exec $switch_super 0
bindsym $mod+ctrl+2 exec $switch_super 1
bindsym $mod+ctrl+3 exec $switch_super 2
bindsym $mod+ctrl+4 exec $switch_super 3
bindsym $mod+ctrl+5 exec $switch_super 4
bindsym $mod+ctrl+6 exec $switch_super 5
bindsym $mod+ctrl+7 exec $switch_super 6
bindsym $mod+ctrl+8 exec $switch_super 7
bindsym $mod+ctrl+9 exec $switch_super 8
bindsym $mod+ctrl+0 exec $switch_super 9

bindsym $mod+1 exec swaymsg workspace $(cat ~/.config/sway/superspace)-0
bindsym $mod+2 exec swaymsg workspace $(cat ~/.config/sway/superspace)-1
bindsym $mod+3 exec swaymsg workspace $(cat ~/.config/sway/superspace)-2
bindsym $mod+4 exec swaymsg workspace $(cat ~/.config/sway/superspace)-3
bindsym $mod+5 exec swaymsg workspace $(cat ~/.config/sway/superspace)-4
bindsym $mod+6 exec swaymsg workspace $(cat ~/.config/sway/superspace)-5
bindsym $mod+7 exec swaymsg workspace $(cat ~/.config/sway/superspace)-6
bindsym $mod+8 exec swaymsg workspace $(cat ~/.config/sway/superspace)-7
bindsym $mod+9 exec swaymsg workspace $(cat ~/.config/sway/superspace)-8
bindsym $mod+0 exec swaymsg workspace $(cat ~/.config/sway/superspace)-9



# Define keybindings for moving containers to subspaces within the current superspace
bindsym $mod+Shift+1 exec swaymsg move container to workspace $(cat ~/.config/sway/superspace)-0
bindsym $mod+Shift+2 exec swaymsg move container to workspace $(cat ~/.config/sway/superspace)-1
bindsym $mod+Shift+3 exec swaymsg move container to workspace $(cat ~/.config/sway/superspace)-2
bindsym $mod+Shift+4 exec swaymsg move container to workspace $(cat ~/.config/sway/superspace)-3
bindsym $mod+Shift+5 exec swaymsg move container to workspace $(cat ~/.config/sway/superspace)-4
bindsym $mod+Shift+6 exec swaymsg move container to workspace $(cat ~/.config/sway/superspace)-5
bindsym $mod+Shift+7 exec swaymsg move container to workspace $(cat ~/.config/sway/superspace)-6
bindsym $mod+Shift+8 exec swaymsg move container to workspace $(cat ~/.config/sway/superspace)-7
bindsym $mod+Shift+9 exec swaymsg move container to workspace $(cat ~/.config/sway/superspace)-8
bindsym $mod+Shift+0 exec swaymsg move container to workspace $(cat ~/.config/sway/superspace)-9


# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
# bindsym $mod+Shift+space floating toggle
# Swap focus between the tiling area and the floating area
# bindsym $mod+space focus mode_toggle

# move focus to the parent container
# bindsym $mod+a focus parent

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad
# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show


workspace_layout default

set $mode_system System: (l) lock, (e) logout, (s) suspend, (r) reboot, (S) shutdown, (R) UEFI
mode "$mode_system" {
    bindsym l exec $lock, mode "default"
    bindsym e exit
    bindsym s exec --no-startup-id systemctl suspend, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"
    bindsym Shift+r exec --no-startup-id systemctl reboot --firmware-setup, mode "default"

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+e mode "$mode_system"

exec_always ~/.config/waybar/waybar.sh


